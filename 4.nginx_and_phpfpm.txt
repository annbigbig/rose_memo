4.安裝nginx和php-fpm

工作列表
=========================================================================================================================
4.1 安裝好nginx並設定成開機後自動執行的服務
4.2 安裝好php-fpm並設定成開機後自動執行的服務


=========================================================================================================================
4.1 安裝好nginx並設定成開機後自動執行的服務
=========================================================================================================================

切換成root用戶好方便作事
$ sudo -i

我是誰？
# whoami

終端機回答
root

更新套件庫
# apt-get update

安裝libtool
# apt-get install libtool

安裝完成，可以這樣檢視剛才安裝的libtool套件
# dpkg -l | grep libtool

切換目錄，待會兒下載的tar.gz都會放在這裡
# cd /usr/local/src

下載zlib、pcre、openssl原始碼的tar.gz包，然後解壓縮
# wget http://zlib.net/zlib-1.2.8.tar.gz
# tar -zxvf ./zlib-1.2.8.tar.gz
# chown -R root:root ./zlib-1.2.8

# wget ftp://ftp.csx.cam.ac.uk/pub/software/programming/pcre/pcre-8.37.tar.gz
# tar -zxvf ./pcre-8.37.tar.gz
# chown -R root:root ./pcre-8.37

# https://www.openssl.org/source/openssl-1.0.2d.tar.gz
# tar -zxvf ./openssl-1.0.2d.tar.gz
# chown -R root:root ./openssl-1.0.2d

下載nginx的原始碼tar.gz，解壓縮之後，進入nginx-1.9.5目錄
# wget http://nginx.org/download/nginx-1.9.5.tar.gz
# tar -zxvf ./nginx-1.9.5.tar.gz
# chown -R root:root ./nginx-1.9.5
# cd ./nginx-1.9.5

查看一下有什麼configure options
# ./configure --help

然後./configure
# ./configure --prefix=/usr/local/nginx-1.9.5 \
--user=www-data \
--group=www-data \
--with-http_ssl_module \
--with-pcre=/usr/local/src/pcre-8.37 \
--with-zlib=/usr/local/src/zlib-1.2.8 \
--with-openssl=/usr/local/src/openssl-1.0.2d

如果沒有問題，終端機會這樣回應(只附上最後一小段)
Configuration summary
  + using PCRE library: /usr/local/src/pcre-8.37
  + using OpenSSL library: /usr/local/src/openssl-1.0.2d
  + md5: using OpenSSL library
  + sha1: using OpenSSL library
  + using zlib library: /usr/local/src/zlib-1.2.8

  nginx path prefix: "/usr/local/nginx-1.9.5"
  nginx binary file: "/usr/local/nginx-1.9.5/sbin/nginx"
  nginx configuration prefix: "/usr/local/nginx-1.9.5/conf"
  nginx configuration file: "/usr/local/nginx-1.9.5/conf/nginx.conf"
  nginx pid file: "/usr/local/nginx-1.9.5/logs/nginx.pid"
  nginx error log file: "/usr/local/nginx-1.9.5/logs/error.log"
  nginx http access log file: "/usr/local/nginx-1.9.5/logs/access.log"
  nginx http client request body temporary files: "client_body_temp"
  nginx http proxy temporary files: "proxy_temp"
  nginx http fastcgi temporary files: "fastcgi_temp"
  nginx http uwsgi temporary files: "uwsgi_temp"
  nginx http scgi temporary files: "scgi_temp"


編譯
# make

安裝
# make install

安裝好的nginx binary在路徑/usr/local/nginx-1.9.5
# cd /usr/local
# ls -al|grep nginx

終端機回應了
drwxr-xr-x  6 root root 4096  9月 28 18:26 nginx-1.9.5

修改一下/usr/local/nginx-1.9.5
包含的所有子目錄和檔案的擁有人、群組和權限值
# chown -R root:www-data ./nginx-1.9.5
# chmod -R g+w ./nginx-1.9.5

最後作一個Symbolic Link
# ln -s nginx-1.9.5 nginx

在啟動nginx之前，先給它搞一個啟動腳本，也就是init script
搜尋關鍵字
「ubuntu 14.04 nginx init script」
參考資料
https://github.com/JasonGiedymin/nginx-init-ubuntu

從github把這個repo拉下來
# cd /tmp
# git clone https://github.com/JasonGiedymin/nginx-init-ubuntu.git
# cd nginx-init-ubuntu/

把init script複製到/etc/init.d/目錄裡面，修改擁有人、群組和權限值
# cp ./nginx /etc/init.d/
# chown root:root /etc/init.d/nginx
# chmod 755 /etc/init.d/nginx

現在開始你可以這樣控制nginx服務
# service nginx status  (查看服務狀態)
# service nginx start  (啟動)
# service nginx stop  (停止)
# service nginx restart (重新啟動)

然後我啟動了nginx服務
# service nginx start

接著看一下有沒有在跑？
# service nginx status

終端機回答了
* Nginx Server... found running with processes:  4079 4078

看看tcp port 80有沒有在Listening？
# netstat -anp|grep nginx

終端機回答了
tcp        0      0 0.0.0.0:80              0.0.0.0:*               LISTEN      4078/nginx.conf 
unix  3      [ ]         STREAM     CONNECTED     23638    4078/nginx.conf     
unix  3      [ ]         STREAM     CONNECTED     23639    4078/nginx.conf     

現在nginx服務運行於本機(10.1.1.170)的tcp port 80
到筆記型電腦上(10.1.1.90)打開瀏覽器，連到
http://10.1.1.170

可以看到瀏覽器顯示了網頁
Welcome to nginx!

If you see this page, 
the nginx web server is successfully installed and working. 
Further configuration is required.
巴拉巴拉巴拉
這個預設的nginx首頁的路徑放在/usr/local/nginx/html/index.html

現在nginx服務可以手動啟動了
接下來要設定開機的時候自動啟動nginx服務（第一次執行update-rc.d指令）
# update-rc.d -f nginx defaults

順便一提如果要讓nginx取消開機自動執行，指令是： 
# update-rc.d -f nginx disable

然後再打開就是
# update-rc.d -f nginx enable

設定好開機自動啟動nginx服務，現在重新開機
# reboot

再次檢查nginx服務有沒有跑起來？
# netstat -anp | grep nginx

如果看到終端機這樣回應
tcp        0      0 0.0.0.0:80              0.0.0.0:*               LISTEN      1380/nginx.conf 
unix  3      [ ]         STREAM     CONNECTED     8223     1380/nginx.conf     
unix  3      [ ]         STREAM     CONNECTED     8224     1380/nginx.conf  

恭喜你，完成了第一個工作，可喜可賀

=========================================================================================================================
4.2 安裝好php-fpm並設定成開機後自動執行的服務
=========================================================================================================================

參考資料
http://www.linuxfromscratch.org/blfs/view/svn/general/php.html

安裝依賴套件
# apt-get update
# apt-get install libxml2-dev libssl-dev libbz2-dev libcurl4-openssl-dev libdb5.1-dev libjpeg-dev libpng12-dev
# apt-get install libXpm-dev libfreetype6-dev libt1-dev libgmp3-dev libc-client2007e-dev libldap2-dev libmcrypt-dev libmhash-dev
# apt-get install freetds-dev zlib1g-dev libmysqlclient-dev libncurses5-dev libpcre3-dev unixODBC-dev 
# apt-get install libsqlite0-dev libaspell-dev libreadline6-dev librecode-dev libsnmp-dev libtidy-dev libxslt1-dev libt1-dev

下載需要的tar.gz並解開它們
剛才安裝Nginx服務器的時候，openssl和zlib已經下載過了就不用再下載
# cd /usr/local/src
# wget http://in1.php.net/distributions/php-5.6.13.tar.gz
# wget http://sourceforge.net/projects/mcrypt/files/MCrypt/2.6.8/mcrypt-2.6.8.tar.gz

編譯openssl並安裝
# cd /usr/local/src/openssl-1.0.2d
# ./config --prefix=/usr/local/openssl-1.0.2d
# make
# make test
# make install
# ln -s /usr/local/openssl-1.0.2d /usr/local/openssl

編譯zlib並安裝
# cd /usr/local/src
# cd ./zlib-1.2.8
# ./configure –prefix=/usr/local/zlib-1.2.8
# make
# make check
# make install
# ln -s /usr/local/zlib-1.2.8 /usr/local/zlib

編譯mcrypt並安裝
# cd /usr/local/src
# tar -zxvf ./mcrypt-2.6.8.tar.gz
# chown -R root:root ./mcrypt-2.6.8
# chmod -R go-w ./mcrypt-2.6.8
# cd ./mcrypt-2.6.8
# ./configure --prefix=/usr/local/mcrypt-2.6.8 –disable-posix-threads
# make
# make check
# make install
# ln -s /usr/local/mcrypt-2.6.8 /usr/local/mcrypt

重要的連結檔gmp.h
# ln -s /usr/include/arm-linux-gnueabihf/gmp.h /usr/include/gmp.h

下載(Bug 65398)補丁於/tmp目錄
# cd /tmp
# wget -O fpm-race-condition.patch 'https://bugs.php.net/patch-display.php?bug_id=65398&patch=fpm-race-condition.patch&revision=1375772074&download=1' -4

解開php-5.6.13.tar.gz
# cd /usr/local/src
# tar -zxvf ./php-5.6.13.tar.gz
# chown -R root:root ./php-5.6.13

打上補丁
# patch -d php-5.6.13 -p0 < /tmp/fpm-race-condition.patch

編譯php-fpm並安裝
# cd ./php-5.6.13
# ./configure -h
# ./configure --prefix=/usr/local/php-5.6.13 \ 
> --enable-opcache --enable-fpm \ 
> --with-mysql --with-mysqli --with-pdo-mysql --with-mysql-sock=/run/mysqld/mysqld.sock \ 
> --with-openssl --with-openssl-dir=/usr/local/openssl-1.0.2d --with-kerberos \ 
> --with-mhash --with-mcrypt=/usr/local/mcrypt-2.6.8 --enable-bcmath --with-gmp \ 
> --enable-shmop --enable-sockets --enable-sysvmsg --enable-sysvsem --enable-sysvshm \ 
> --enable-soap --enable-wddx --with-xmlrpc --with-readline --enable-calendar \ 
> --with-gettext --enable-mbstring \ 
> --with-zlib --with-zlib-dir=/usr/local/zlib-1.2.8 \ 
> --with-bz2 --enable-zip --enable-exif --with-gd 
# make


編譯完成
終端機出現訊息(只取最後2行)
Build complete.
Don't forget to run 'make test'.

但是在上面幾行的地方，出現了
PEAR package PHP_Archive not installed: generated phar will require PHP's phar extension be enabled.

把這一串訊息輸入google搜尋，得到了
參考資料
http://forums.devshed.com/php-development-5/install-pear-php-5-3-8-a-850520.html
http://www.5ienet.com/note/html/stlamp6/index.shtml

解決方法就是下載go-pear.phar然後用php執行它
先跑完測試，先安裝完再來解決這個問題
# make test
# make install

回到剛才的pear的問題
# cd /tmp
# wget http://pear.php.net/go-pear.phar
# /usr/local/php-5.6.13/bin/php /tmp/go-pear.phar

接下來會進入一個交談式的介面，按下Enter一次，完成pear的安裝
(輸出訊息略)

建立Symbolic Link
複製設定檔到正確的路徑
設定php-fpm執行檔的權限
# ln -s /usr/local/php-5.6.13 /usr/local/php
# cp /usr/local/src/php-5.6.13/php.ini-development /usr/local/php/lib/php.ini
# cp /usr/local/php/etc/php-fpm.conf.default /usr/local/php/etc/php-fpm.conf
# cp /usr/local/php/sbin/php-fpm /usr/local/sbin/
# chown root:root /usr/local/sbin/php-fpm
# chmod a+x /usr/local/sbin/php-fpm




