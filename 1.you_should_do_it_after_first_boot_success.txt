可以開機之後，你該作這些事：

1.網路設定
	1.1 網路參數設定檔/etc/network/interfaces
	1.2 本機防火牆設定/etc/network/if-up.d/firewall
	1.3 常用網路指令

2.主機名稱
	2.1 修改/etc/hostname
	2.2 修改/etc/hosts

3.系統時間
	3.1 設定Timezone
	3.2 更新系統時間(一次性)
	3.3 讓系統自動每日校時一次

4.語言
	4.1 設定目前的locale為zh_TW

5.用戶
	5.1 重新設置root用戶密碼
	5.2 新增超級使用者labasky
	5.3 移除預設的用戶linaro

6.自動登入
	6.1 取消root自動登入於tty1
	6.2 取消自動登入LXDE

7.安裝必要軟體
	7.1 安裝build-essential
	7.2 安裝manpages
	7.3 安裝git
	7.4 安裝svn

8.加掛swap space

9.系統監測
	9.1 top
	9.2 htop
	9.3 Smartmontools (硬碟檢測)
	9.4 badblocks (SD卡檢測)
	9.5 memtester (RAM檢測)
	9.6 network bandwidth monitor (網路流量監測)

10.Fix some bla bla bla
	10.1 修正Press F to attempt to fix the errors ...(一定要你按F才繼續boot process)
	10.2 在vi文字編輯器裡的上下左右，變成ABCD
	10.3 查看/var/log/syslog發現nullmailer一直持續嘗試寄信出去

====================================================================================================================
1.1 網路參數設定檔/etc/network/interfaces
====================================================================================================================
# interfaces(5) file used by ifup(8) and ifdown(8)
# Include files from /etc/network/interfaces.d:
#source-directory /etc/network/interfaces.d

# ---
auto lo
iface lo inet loopback

# --- enable eth0 with dhcp ---
auto eth0
iface eth0 inet dhcp
#  dns-nameservers 8.8.8.8 8.8.4.4 168.95.1.1 168.95.192.1

注意上面的DNS Server的指定，我是注解掉的(也就是失效)
因為我的路由器上運行的DHCP Server會把DNS設定一併Push給DHCP client端
如果你的DHCP Server沒有這個功能，就把這一行前面的#去掉，讓它生效

====================================================================================================================
1.2 本機防火牆設定/etc/network/if-up.d/firewall
====================================================================================================================
安裝iptables套件
# apt-get update
# apt-get install iptables

確認一下真的安裝完成了
# which iptables

終端機會回答
/sbin/iptables

產生空白的/etc/network/if-up.d/firewall檔案
並設定權限
編輯它
# touch /etc/network/if-up.d/firewall
# chmod +x /etc/network/if-up.d/firewall
# vi /etc/network/if-up.d/firewall

內容如下
#!/bin/sh
# ============ Set your network parameters here ===================================================
iptables=/sbin/iptables
loopback=127.0.0.1
local="$(/sbin/ifconfig | grep -A 1 'eth0' | tail -1 | cut -d ':' -f 2 | cut -d ' ' -f 1)"
#local=10.1.1.170
lan=10.1.1.0/24
vpn=10.8.0.0/24
# =================================================================================================
$iptables -t filter -F
$iptables -t filter -A INPUT -i lo -s $loopback -d $loopback -p all -j ACCEPT
$iptables -t filter -A INPUT -i eth0 -s $local -d $local -p all -j ACCEPT
$iptables -t filter -A INPUT -i eth0 -s $lan -d $local -p all -j ACCEPT
$iptables -t filter -A INPUT -d $local -p tcp --dport 36000 --syn -m state --state NEW -j ACCEPT
$iptables -t filter -A INPUT -s $lan -p tcp --dport 36000 --syn -m state --state NEW -j ACCEPT
$iptables -t filter -A INPUT -d $local -p tcp --dport 80 --syn -m state --state NEW -m limit --limit 10/s --limit-burst 40 -j ACCEPT
$iptables -t filter -A INPUT -d $local -p tcp --dport 80 --syn -m state --state NEW -j DROP
$iptables -t filter -A INPUT -d $local -p tcp --dport 443 --syn -m state --state NEW -m limit --limit 10/s --limit-burst 40 -j ACCEPT
$iptables -t filter -A INPUT -d $local -p tcp --dport 443 --syn -m state --state NEW -j DROP
$iptables -t filter -A INPUT -s $lan -d $local -p icmp -j ACCEPT
$iptables -t filter -A INPUT -s $vpn -d $local -p icmp -j ACCEPT
$iptables -t filter -A INPUT -p icmp --icmp-type 8 -m limit --limit 10/s -j ACCEPT
$iptables -t filter -A INPUT -m state --state ESTABLISHED,RELATED -j ACCEPT
$iptables -t filter -P INPUT DROP
$iptables -t filter -L -n --line-number
# =================================================================================================


====================================================================================================================
1.3 常用網路指令
====================================================================================================================
查看網路接口狀態
# ifconfig

關掉eth0網卡 (從/etc/network/interfaces讀取網路設定參數)
# ifdown eth0

啟動eth0網卡 (從/etc/network/interfaces讀取網路設定參數)
# ifup eth0

發送測試的icmp封包到某個IP看是否有回應？
通常會試ping到匣道路由器，某個public IP，然後是domain name
像這樣
# ping 10.1.1.1
# ping 8.8.8.8
# ping www.google.com.tw

查看路由表
# route -n

查看現在使用的DNS resolver (從DHCP Server得到的參數)
# cat /etc/resolv.conf

查看目前的iptables防火牆規則
# iptables -L -n --line-number



====================================================================================================================
2.1 修改/etc/hostname
====================================================================================================================

原來的內容就只有一行
linaro-alip

改成你想要的主機名稱，例如
rose01


====================================================================================================================
2.2 修改/etc/hosts
====================================================================================================================

原來的內容
127.0.0.1	localhost
::1		localhost ip6-localhost ip6-loopback
fe00::0		ip6-localnet
ff00::0		ip6-mcastprefix
ff02::1		ip6-allnodes
ff02::2		ip6-allrouters
127.0.1.1       linaro-alip

如果你決定把主機名稱改成rose01，把最後一行改成
127.0.1.1       rose01

改完要重新開機之後，新的主機名稱才會生效


====================================================================================================================
3.1 設定Timezone
====================================================================================================================

先查看目前的時間
# date

終端機輸出
Mon Sep 21 12:53:05 UTC 2015

可是其實現在的時間應該是2015年的9/21的20:53才對
早了整整八個小時

執行
# dpkg-reconfigure tzdata

進入GUI之後
先選Asia再選Taipei

再查看一次目前的時間
# date

終端機輸出了
Mon Sep 21 20:55:56 CST 2015


====================================================================================================================
3.2 更新系統時間(一次性)
====================================================================================================================

開機的時候，如果網路接口eth0有取得IP，網路連線正常的話
則/etc/network/if-up.d/ntpdate會自動執行一次校時

如果你要手動執行它的話
就
# ntpdate ntp.ubuntu.com


====================================================================================================================
3.3 讓系統自動每日校時一次
====================================================================================================================

產生一個ntpdate的shell script放在/etc/cron.daily目錄裡面

# touch /etc/cron.daily/ntpdate
# chmod 755 /etc/cron.daily/ntpdate
# echo '#!/bin/sh' >> /etc/cron.daily/ntpdate
# echo 'ntpdate ntp.ubuntu.com' >> /etc/cron.daily/ntpdate
# cat /etc/cron.daily/ntpdate 

檔案內容如下

#!/bin/sh
ntpdate ntp.ubuntu.com

如果覺得每日校時一次不夠，也可以把這個shell script放在/etc/cron.hourly目錄下面
每個小時都會校時一次，不過沒必要啦

====================================================================================================================
4.1 設定目前的locale為zh_TW
====================================================================================================================

參考資料
https://help.ubuntu.com/community/Locale

查看目前系統上支援的locale有那些
# locale -a

終端機輸出了
C
C.UTF-8
POSIX

列出目前的locale設定值
# locale

終端機輸出了
LANG=C.UTF-8
LANGUAGE=
LC_CTYPE="C.UTF-8"
LC_NUMERIC="C.UTF-8"
LC_TIME="C.UTF-8"
LC_COLLATE="C.UTF-8"
LC_MONETARY="C.UTF-8"
LC_MESSAGES="C.UTF-8"
LC_PAPER="C.UTF-8"
LC_NAME="C.UTF-8"
LC_ADDRESS="C.UTF-8"
LC_TELEPHONE="C.UTF-8"
LC_MEASUREMENT="C.UTF-8"
LC_IDENTIFICATION="C.UTF-8"
LC_ALL=

原來系統預設的
# cat /etc/default/locale

終端機輸出了
LANG=C.UTF-8


安裝漢語language-pack-zh-*
# apt-get update
# apt-get install language-pack-zh-*

安裝中文字型
# apt-get install fonts-wqy-zenhei

安裝完漢語支援包後，再次查看系統現在支援什麼locale
# locale -a

終端機輸出了
C
C.UTF-8
POSIX
zh_CN.utf8
zh_HK.utf8
zh_SG.utf8
zh_TW.utf8

修改
# vi /etc/default/locale 

只有一行，改成這樣
LANG=zh_TW.UTF-8

產生/var/lib/locales/supported.d目錄下的檔案
# locale-gen

重新開機
# sync
# reboot

開機完成後，再次看
# locale

終端機輸出了
LANG=zh_TW.UTF-8
LANGUAGE=
LC_CTYPE="zh_TW.UTF-8"
LC_NUMERIC="zh_TW.UTF-8"
LC_TIME="zh_TW.UTF-8"
LC_COLLATE="zh_TW.UTF-8"
LC_MONETARY="zh_TW.UTF-8"
LC_MESSAGES="zh_TW.UTF-8"
LC_PAPER="zh_TW.UTF-8"
LC_NAME="zh_TW.UTF-8"
LC_ADDRESS="zh_TW.UTF-8"
LC_TELEPHONE="zh_TW.UTF-8"
LC_MEASUREMENT="zh_TW.UTF-8"
LC_IDENTIFICATION="zh_TW.UTF-8"
LC_ALL=

這個時候LXDE的圖形介面裡已經是繁體中文了


====================================================================================================================
5.1 重新設置root用戶密碼
====================================================================================================================

現在我是誰
# whoami

終端機回答
root

修改密碼
# passwd


====================================================================================================================
5.2 新增超級使用者labasky
====================================================================================================================

新增用戶
(交互式的文字操作介面，回答一些簡單的問題，並設定好用戶的密碼)
# adduser labasky

修改/etc/sudoers之前，此刻設定檔裡沒有新用戶labasky的存在
也就是說，他還不能使用sudo -i指令，就快樂變成root用戶
# cat /etc/sudoers | grep labasky

修改/etc/sudoers
注意這裡是用visudo指令
# visudo

剛才的新用戶labasky的權限
被安排在這個區塊，像這樣
# User privilege specification
root    ALL=(ALL:ALL) ALL
labasky ALL=(ALL:ALL) ALL

編輯完成之後，按ESC再:wq離開vi文字編輯器
這個時候再看一次/etc/sudoers檔案
# cat /etc/sudoers | grep labasky

終端機回答
labasky	ALL=(ALL:ALL) ALL

試著從另一台電腦(筆電)的終端機，連線到主機rose01
$ ssh labasky@10.1.1.170

以用戶labasky登入ssh server成功之後
labasky@rose01:~$ whoami
labasky
labasky@rose01:~$ sudo -i
[sudo] password for labasky: 
root@rose01:~# 

可以成功變成最高用戶root
不過還是要輸入用戶labasky的密碼
如果你希望用戶labasky可以直接在執行sudo -i之後就變成最高用戶root

剛才在visudo裡
把
labasky ALL=(ALL:ALL) ALL
這一行拿掉
然後在檔案的最下面一行，加入
labasky ALL=(ALL) NOPASSWD: ALL

參考資料
http://askubuntu.com/questions/147241/execute-sudo-without-password


====================================================================================================================
5.3 移除預設的用戶linaro
====================================================================================================================

執行
# userdel -r linaro

確認一下是不是真的移除了？
# cat /etc/passwd|grep linaro
# cat /etc/shadow|grep linaro
# cat /etc/group|grep linaro

====================================================================================================================
6.1 取消root自動登入於tty1
====================================================================================================================

# mv /etc/init/openvt.conf /etc/init/openvt.conf.not.working


====================================================================================================================
6.2 取消自動登入LXDE
====================================================================================================================

查看一下LXDE相關設定檔裡面關於autologin=的這一行設定值
# cat /etc/lxdm/default.conf | grep autologin=

終端機輸出
autologin=linaro

使用vi文字編輯器修改此設定檔
# vi /etc/lxdm/default.conf

把剛才那行直接註解掉，變成下面這樣，
我順便把linaro換成了labasky
日後如果需要autologin就去掉最前面的#號就可以了
#autologin=labasky

====================================================================================================================
7.1 安裝build-essential
====================================================================================================================

# apt-get install build-essential

安裝完後，確認一下gcc的存在
# which gcc

終端機回應
/usr/bin/gcc

也可以執行這個指令來確認gcc的版本號
# gcc -version

====================================================================================================================
7.2 安裝manpages
====================================================================================================================

這個rootfs沒有/usr/bin/man這個東西的，所以我得手動裝上它
# apt-get install man manpages

看看到底安裝好了嗎？
# which man

隨便看個man page
# man passwd

====================================================================================================================
7.3 安裝git
====================================================================================================================

安裝git
# apt-get install git-core

切換成用戶labasky
# exit

我是誰？
$ whoami

終端機回答
labasky

設定user.name和user.email
(你的用戶名和電子郵件肯定和我不同，請改成你自已的)
$ git config --global user.name "KunAn Hsu"
$ git config --global user.email annbigbig@gmail.com

剛才的設定放在家目錄下的.gitconfig檔案裡
你可以這樣確認
$ cat ~/.gitconfig 

終端機輸出了
[user]
	name = KunAn Hsu
	email = annbigbig@gmail.com

把你github用的那把ssh private key
複製到/home/labasky/.ssh/id_rsa
(以下的操作是在筆記型電腦10.1.1.90的終端機，把私鑰id_rsa複製到10.1.1.170主機的/tmp目錄下)
$ cd /home/anntony/.ssh
$ scp ./id_rsa labasky@10.1.1.170:/tmp

再回到了小板板的終端機
$ cd /home/labasky/.ssh
$ cp /tmp/id_rsa ./
$ chmod 600 ./id_rsa

到github上面new一個測試用的空的repo (過程略)
然後在本地端(小板板)產生一個目錄，git init後，提交內容，試著push到github
$ mkdir testrepo1
$ cd testrepo1/
$ echo "# testX01" >> README.md
$ git init
$ git add -A
$ git commit -m "first commit"
$ git remote add origin git@github.com:annbigbig/testX01.git
$ git push -u origin master
$ git log --oneline --graph --decorate --all

切換到/tmp目錄，把剛才的repo再拉下來瞧瞧
$ cd /tmp
$ git clone git@github.com:annbigbig/testX01.git

如果上面的git push和git clone都沒有錯誤訊息的話
就是git安裝並設定正確了
將來rootfs要包給別人用的時候，記得把/home/labasky/.ssh/id_rsa這個你個人的私鑰檔案刪掉
不然每個拿了你rootfs使用的人，都可以提交到你的github repo，是很可怕的事

====================================================================================================================
7.4 安裝svn
====================================================================================================================

安裝
# apt-get install subversion

裝好後，實際拉個repo下來試試

# cd /tmp
# svn co svn://svn.openwrt.org/openwrt/trunk/
# rm -rf ./trunk

====================================================================================================================
8.加掛swap space
====================================================================================================================
參考資料
https://www.digitalocean.com/community/tutorials/how-to-add-swap-on-ubuntu-14-04

檢查目前系統是否已經加掛了swap space？
# swapon -s

如果終端機只有回應這樣，表示系統沒有掛上swap
Filename				Type		Size	Used	Priority

也可以這樣檢查
# free -m

基本上加掛swap space可以有兩種方式
一個是分配一個partition給系統當swap，不過會更動到整個系統的partition table，工程浩大
所以這裡採取比較簡單的方式，在已經存在的分割區上面，分配一個空白檔案當成swap file

首先檢查rootfs還剩多少磁碟空間？
# df -h

檔案系統        容量  已用  可用 已用% 掛載點
/dev/mmcblk0p2  7.1G  994M  5.7G   15% /
none            4.0K     0  4.0K    0% /sys/fs/cgroup
udev             10M  4.0K   10M    1% /dev
none             75M  336K   75M    1% /run
none            5.0M     0  5.0M    0% /run/lock
none            375M     0  375M    0% /run/shm
none            100M     0  100M    0% /run/user
tmpfs           375M     0  375M    0% /dev/shm

上面終端機說，我的rootfs掛載在/dev/mmcblk0p2，也就是SD卡的第二個分割區
目前用掉了994M，還有5.7G可以使用
配置swap space大小的原則，是根據你系統的RAM容量大小，乘以一或是乘以二
不要問我為什麼，上面的洋人說的，我就照著這個大小分配而已
小板板上面有1G RAM，所以我的swap file也配個1G大小差不多

建立swap file
操作dd指令時請小心，最好是複製貼上我下面的dd指令到終端機執行，dd指令的of參數打錯會產生毀滅性的結果
# cd /
# dd if=/dev/zero of=./swapfile bs=1M count=1024

經過幾分鐘後，終端機輸出了
輸入 1024+0 個紀錄
輸出 1024+0 個紀錄
複製了 1073741824 個位元組 (1.1 GB), 101.96 s, 10.5 MB/s

這個時候看看剛才產生的/swapfile檔案的大小
# ls -lh /swapfile

終端機的回應
-rw-r--r-- 1 root root 1.0G  9月 24 16:55 /swapfile

修改swapfile的權限值為600，因為除了用戶root不該有任何人可以修改它或讀取它
# chmod 600 /swapfile

再次檢查/swapfile的權限
# ls -lh /swapfile
-rw------- 1 root root 1.0G  9月 24 16:55 /swapfile

執行mkswap
# mkswap /swapfile

終端機回應了
設定 swapspace 版本 1, 大小 = 1048572 KiB
無標籤， UUID=9732e1e9-bfb6-4ace-a089-1a6521bd75c8

然後swapon，把剛才的/swapfile掛載成swap space
# swapon /swapfile

檢查系統現在有沒有掛上swap space，再一次執行
# swapon -s

終端機回應了
Filename				Type		Size	Used	Priority
/swapfile                               file		1048572	0	-1

也可以這樣檢查
# free -m

到剛才為止，我們雖然掛上了/swapfile當成我們系統的swap space
不過只要你執行reboot指令重新開機
你剛才的/swapfile並不會自動掛載為swap space
你必須修改/etc/fstab這個檔案才行
# vi /etc/fstab

在檔案的最後面加上這一行
/swapfile   none    swap    sw    0   0

重新開機之後
# reboot

再次檢查swap space是否有掛載上去？
# swapon -s

如果有掛載上swap space
終端機應該會這樣回應你
Filename				Type		Size	Used	Priority
/swapfile                               file		1048572	0	-1

或是執行
# free -m

終端機會這樣回應
             total       used       free     shared    buffers     cached
Mem:           748        127        620          0          7         41
-/+ buffers/cache:         78        670
置換：       1023          0       1023

以上就作完swap space的設置
但是後面你可以再作一些優化的動作

首先查看swappiness參數的值
# cat /proc/sys/vm/swappiness

終端機回應了
60

這個swappiness的值，範圍在0到100
愈靠近100，表示系統傾向於將愈多的資料放置在swap space，然後盡量空出RAM的空間
如果愈靠近0就是剛好相反，最好是設定成0，這表示除非萬不得已，才使用swap space(較慢)

修改/etc/sysctl.conf
# vi /etc/sysctl.conf

在最後一行，加上
vm.swappiness=0
改完存檔離開

接著再查看另一個系統參數
# cat /proc/sys/vm/vfs_cache_pressure

終端機回應了
100

這是從快取裡移除inode資訊的速度，太快了，我們可以設定一個較為保守的值，例如50
(我也看不懂，我只是照著翻譯而已，原文是：)
our system removes inode information from the cache too quickly.
We can set this to a more conservative setting like 50 by typing:

一樣是修改剛才的/etc/sysctl.conf
然後把這一行加到檔案的最後面
vm.vfs_cache_pressure = 50

改好離開vi文字編輯器
然後重新開機
# reboot

重新開機之後
試著
# cat /proc/sys/vm/swappiness
終端機應該要輸出0
還有試著
# cat /proc/sys/vm/vfs_cache_pressure
終端機應該要輸出50才對
這是剛才在/etc/sysctl.conf設定檔裡設定的值

====================================================================================================================
9.1 top
====================================================================================================================

系統預設已經有安裝top了
# which top

終端機回答
/usr/bin/top

要使用就直接
# top

然後就可以看到終端機顯示出目前的系統狀態
按q可以離開

====================================================================================================================
9.2 htop
====================================================================================================================

安裝htop
# apt-get install htop

要使用就
# htop

一樣是按q離開

====================================================================================================================
9.3 Smartmontools (硬碟檢測)
====================================================================================================================
參考資料
https://help.ubuntu.com/community/Smartmontools

這一小節必須等到你有加掛usb3外接硬碟的時候，才派得上用場
因為Smartmontools是一個硬碟的檢測程式
它可以讓支援S.M.A.R.T功能的較為新式的硬碟，回報目前關於硬碟狀態的一些量化數據

安裝套件
# apt-get install smartmontools

確認你的硬碟支援SMART，這裡假設你的外接硬碟的裝置代號是/dev/sda
請視你實際的情況下指令
# smartctl -i /dev/sda 

如果硬碟有支援SMART，會看到終端機這樣回你 (僅列出最後2行輸出)
SMART support is: Available - device has SMART capability.
SMART support is: Enabled

如果硬碟的SMART功能沒被打開，你可以這樣下指令手動打開它
# smartctl -s on /dev/sda

測試硬碟之前，可以先看一下預估的測試時間大概會花多久？
# smartctl -c /dev/sda

最有用處的測試是long類型的測試，耗時最久，但是收集最多資訊
下這個指令開始測試硬碟
# smartctl -t long /dev/sda

測試跑完之後(我的是102分鐘之後)
執行這個指令來查看詳細的SMART information
# smartctl -a -d ata /dev/sda

你可以安裝上GSmartControl這個套件
然後在Gnome的GUI環境裡來查看剛才收集的SMART information
# apt-get install gsmartcontrol

進階：將Smartmontools執行為系統服務


====================================================================================================================
9.4 badblocks (SD卡檢測)
====================================================================================================================
參考資料
http://help.endian.com/entries/21397216-Verify-if-the-micro-SD-card-is-corrupt

把SD卡從小板板拔出
插到你的桌機或是筆記型電腦上
插入後，我假設SD卡的裝置代號是/dev/sdb
確認SD卡沒有被mount上
執行
# umount /dev/sdb*

檢查是否有bad blocks?
# badblocks -n -v /dev/sdb

測試結果
Checking for bad blocks in non-destructive read-write mode
From block 0 to 7715839
Testing with random pattern: Pass completed, 0 bad blocks found. (0/0/0 errors)

沒有壞掉的block，很快樂

====================================================================================================================
9.5 memtester (RAM檢測)
====================================================================================================================
參考資料
http://www.ehow.com/how_8187353_test-ram-linux.html

安裝memtester
# apt-get install memtester

看一下指令安裝在那裡？
# which memtester

終端機回答了
/usr/sbin/memtester

現在執行檢測指令(以root用戶身分)，1024是我小板板的記憶體容量MB數，5是重複測5次
# memtester 1024 5

沒隔多久(幾秒的時間)就再次回到#提示符
memtester version 4.3.0 (32-bit)
Copyright (C) 2001-2012 Charles Cazabon.
Licensed under the GNU General Public License version 2 (only).

pagesize is 4096
pagesizemask is 0xfffff000
want 1024MB (1073741824 bytes)
got  1024MB (1073741824 bytes), trying mlock ...已砍掉
root@rose01:~#

然後執行這個指令來查看exit code
# echo $?

終端機回答了
137

WTF？
我爬了一下文，關鍵字 「memtest exit code 137」還有看了我的/var/log/syslog
得到exit code 137的原因好像是因為記憶體被寫滿了？？？？？(覺得很怪，板子上1G記憶體所以我參數下1024M有錯嗎？)

然後我再改上面的測試指令，這次改成
# memtester 512 5

這次看起來有在測試
終端機被咬住了，輸出了一些訊息(略)
我再ssh進去10.1.1.170取得了另一個shell
執行
# htop

其中和Memory有關的那一行變成這樣
Mem[|||||||||||||||||||||||||||||||||||||||||||588/748MB]
所以我在想我剛才下memtester 1024 5的時候整個超過了(1024 > 748)
但是這個輸出說明，現在正在記憶體測試，可是卻有160MB空著(748-588=160)
所以我剛才應該下
# memtester 672 5

是這樣的意思嗎？
等到咬住的終端機再把#提示符交還之後
執行
# echo $?

終端機輸出了
0

這代表可喜可賀，有測試的部分都是正常的
exit code代表的意思請參考這裡

0 : 一切正常
x01: Error allocating or locking memory, or invocation error
x02: Error during stuck address test
x04: Error during one of the other tests.

====================================================================================================================
9.6 network bandwidth monitor (網路流量監測)
====================================================================================================================
參考資料
http://www.binarytides.com/linux-commands-monitor-network/

搜尋關鍵字「linux network traffic monitor」

以下列出17種工具指令
9.6.1 nload
安裝 # apt-get install nload
使用 # nload
結束：按q離開

9.6.2 iftop
安裝 # apt-get install iftop
使用 # iftop -n
結束：按q離開

9.6.3 iptraf
安裝 # apt-get install iptraf iptraf-ng
使用 # iptraf
結束：按X再選擇Exit離開

9.6.4 nethogs
安裝 # apt-get install nethogs
使用 # nethogs
結束：按q離開

9.6.5 bmon (還不錯)
安裝 # apt-get install bmon
使用 # bmon (進入操作介面選eth0，按下d和i之後可顯示更進階的訊息)
結束：按q再選y離開

9.6.6 slurm
安裝 # apt-get install slurm
使用 #  slurm -s -i eth0
結束：按q離開

9.6.7 tcptrack
安裝 # apt-get install tcptrack
使用 # tcptrack -i eth0 (進入操作介面還要按一次Enter才有東西會跑出來)
結束：按q離開

9.6.8 vnstat
安裝 # apt-get install vnstat
查看是否vnstat daemon正在背景執行？
# service vnstat status
終端機輸出了
* vnStat daemon is running
設定檔路徑 /etc/vnstat.conf
裡面可以看到一行設定
DatabaseDir "/var/lib/vnstat"
(儲存歷史網路流量資訊的目錄)
查看自vnstat daemon開始運行之後，網路頻寬使用的總報表(每日、每月…)
# vnstat
查看網路流量即時狀態
# vnstat -l -i eth0
結束：按Ctrl+C離開

9.6.9 bwm-ng
安裝 # apt-get install bwm-ng
使用 # bwm-ng
結束：按q離開

9.6.10 cbm
安裝 # apt-get install cbm
使用 # cbm
結束：按q離開

9.6.11 speedometer
安裝 # apt-get install speedometer
使用 # speedometer -r eth0 -t eth0
結束：按q離開

9.6.12 pktstat
安裝 # apt-get install pktstat
使用 # pktstat -i eth0 -nt (按方向鍵上或下可以切換單位bps或Bps)
結束：按q離開

9.6.13 trafshow
安裝 # apt-get install netdiag
使用 #  trafshow -i eth0 tcp
結束：按q離開

9.6.14 netload
安裝 # apt-get install netdiag (不要執行安裝，因為和上面的trafshow一樣是netdiag套件裡的東西)
使用 # netload eth0
結束：按Ctrl+C離開

9.6.15 ifstat
安裝 # apt-get install ifstat
使用 # ifstat -t -i eth0 0.5
結束：按Ctrl+C離開

9.6.16 dstat
安裝 # apt-get install dstat
使用 # dstat -nt
結束：按Ctrl+C離開

9.6.17 collectl
安裝 # apt-get install collectl
使用 # collectl -sn -oT -i0.5
結束：按Ctrl+C離開


====================================================================================================================
10.1 修正Press F to attempt to fix the errors ...(一定要你按F才繼續boot process)
====================================================================================================================
參考資料
http://askubuntu.com/questions/460651/how-to-deal-with-errors-were-found-while-checking-the-disk-drive-for-in-a-se
http://askubuntu.com/questions/151025/how-can-i-make-fsck-run-non-interactively-at-boot-time

插入SD卡開機的時候
大約有50%以上的機率
會遇到這個問題，你會看到開機程序卡在這裡，跳出了這個訊息

Errors were found while checking the disk drive for /.
Press F to attempt to fix the errors, I to ignore, S to skip mounting or M for manual recovery

強制你一定要按下F來修正錯誤之後，才能繼續boot process
這個問題可以如下解決

列出/etc/default/rcS設定檔裡關於FSCKFIX的這一行
# cat /etc/default/rcS | grep FSCKFIX

終端機回應了
#FSCKFIX=no

打開vi文字編輯器，修改它
# vi /etc/default/rcS 

把剛才那一行，改成這樣
FSCKFIX=yes

改好之後，按下ESC然後:wq存檔，離開vi文字編輯器
重新開機之後，不會再被系統強制一定要按下F或I或S或M才能繼續boot process

====================================================================================================================
10.2 在vi文字編輯器裡的上下左右，變成ABCD
====================================================================================================================

安裝vim就能解決上下左右變ABCD的問題
# apt-get install vim

====================================================================================================================
